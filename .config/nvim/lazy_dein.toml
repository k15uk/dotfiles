[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  let s:denite_win_width_percent = 1
  let s:denite_win_height_percent = 0.5

  call denite#custom#option( 'default', {
    \ 'split':     'floating',
    \ 'winwidth':  float2nr( &columns * s:denite_win_width_percent ),
    \ 'wincol':    float2nr( ( &columns - ( &columns * s:denite_win_width_percent ) ) / 2 ),
    \ 'winheight': float2nr( &lines * s:denite_win_height_percent ),
    \ 'winrow':    float2nr( ( &lines - ( &lines * s:denite_win_height_percent ) ) - 2 ),
    \ } )

  highlight NormalFloat ctermbg=black guibg=none

  nnoremap <silent>F :DeniteBufferDir -buffer-name=file file file:new<CR>
  nnoremap <silent>b :DeniteProjectDir buffer<CR>
  nnoremap <silent>f :DeniteProjectDir file/rec -start-filter<CR>

  call denite#custom#source( 'file', 'sorters', [ 'sorter/word' ] )
  call denite#custom#option( 'file', {
    \ 'split':     'floating',
    \ 'winwidth':  float2nr( &columns / 4 ),
    \ 'wincol':    0,
    \ 'winheight': float2nr( &lines * 1 ) - 3,
    \ 'winrow':    1,
    \ } )

  call denite#custom#source( 'file/rec', 'sorters', [ 'sorter/word' ] )
  call denite#custom#source( 'file/rec', 'matchers', [ 'matcher/fuzzy' ] )

  autocmd FileType denite-filter call s:denite_filter_settings()
  function! s:denite_filter_settings() abort
    inoremap <silent><buffer><expr> <Esc>   denite#do_map( 'quit' )
  endfunction
'''

[plugins.ftplugin]
denite = '''
  nnoremap <silent><buffer><expr> l     denite#do_map( 'do_action' )
  nnoremap <silent><buffer><expr> h     denite#do_map( 'move_up_path' )
  nnoremap <silent><buffer><expr> <esc> denite#do_map( 'quit' )
  nnoremap <silent><buffer><expr> i     denite#do_map( 'open_filter_buffer' )
'''

[[plugins]]
repo = 'posva/vim-vue'
on_ft = [ 'vue' ]

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = [ 'vue' , 'pug' ]

[[plugins]]
repo = 'fatih/vim-go'
on_ft = [ 'go' ]
hook_source = '''
  " 保存時に必要なimportを自動的に挿入
  let g:go_fmt_command = "goimports"
  " LSPに任せる機能をOFFにする
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''

[[plugins]]
repo = 'phpactor/phpactor'
on_ft = [ 'php' ]
build = 'composer install'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = [ 'toml' ]

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = [ 'uml' , 'plantuml' ]
# vim:fenc=utf-8 ff=unix ft=toml
